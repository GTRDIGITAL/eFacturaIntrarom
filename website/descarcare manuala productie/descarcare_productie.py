import requests
import time
import xml.etree.ElementTree as ET
import zipfile
import shutil
import os


headers = "Bearer ewogICJhbGciOiJSUzUxMiIsCiAgImtpZCI6ImFuYWZfMjAyM18yMDI0Igp9.ewogICJ0b2tlbl90eXBlIjoiQmVhcmVyIiwKICAic2NvcGUiOiJjbGllbnRhcHBpZCBpc3N1ZXIgcm9sZSBzZXJpYWwiLAogICJzY29wZV9kYXRhIjpbCiAgICB7CiAgICAgICAgImlkIjoiY2xpZW50YXBwaWQiLAogICAgICAgICJ2YWx1ZSI6IjZkMDY2YzczMzMzMjM2YWFkNGI3ODBiNjBmZDA3ZThhN2UzZWU3MWRlZjdiMmU2NSIKICAgIH0sCiAgICB7CiAgICAgICAgImlkIjoiaXNzdWVyIiwKICAgICAgICAidmFsdWUiOiJEaWdpU2lnbiIKICAgIH0sCiAgICB7CiAgICAgICAgImlkIjoicm9sZSIsCiAgICAgICAgInZhbHVlIjoiSEVMTE8sRUZBQ1RVUkEsRVRSQU5TUE9SVCxTUlZfRUZBQ1RVUkEiCiAgICB9LAogICAgewogICAgICAgICJpZCI6InNlcmlhbCIsCiAgICAgICAgInZhbHVlIjoiMjA6MDU6MDY6MjQ6NTA6MDE6ODg6OTU6MGU6MGM6ZWY6YmI6NzQ6M2U6Yzk6ZWYiCiAgICB9CiAgXSwKICAiaXNzIjoiaHR0cHM6Ly9sb2dpbmNlcnQuYW5hZi5ybyIsCiAgImNsaWVudGFwcGlkIjoiNmQwNjZjNzMzMzMyMzZhYWQ0Yjc4MGI2MGZkMDdlOGE3ZTNlZTcxZGVmN2IyZTY1IiwKICAiZWZhY3R1cmEiOiJFRkFDVFVSQUBTUlZfRUZBQ1RVUkEiLAogICJldHJhbnNwb3J0IjoiRVRSQU5TUE9SVCIsCiAgImhlbGxvIjoiSEVMTE8iLAogICJpc3N1ZXIiOiJEaWdpU2lnbiIsCiAgInJvbGVzIjoiSEVMTE9ARUZBQ1RVUkFARVRSQU5TUE9SVEBTUlZfRUZBQ1RVUkEiLAogICJzZXJpYWwiOiIyMDowNTowNjoyNDo1MDowMTo4ODo5NTowZTowYzplZjpiYjo3NDozZTpjOTplZiIsCiAgInN1YiI6IjIwMDUwNjI0NTAwMTg4OTUwZTBjZWZiYjc0M2VjOWVmIiwKICAianRpIjoiNjNhNWY0NzdjYjY3MTg2ODljNTA0NGI0ZmZlNTU0YTJjODNkNmNiZWRjYzk3ZTg0YTMzNDI1ZWIxYjc5MTc1NSIsCiAgImlhdCI6MTcxNjgwNzYxMywKICAiZXhwIjoxNzI0NTgzNjEzLAogICJuYmYiOjE3MTY4MDczMTMKfQ.SAanpWJtJ_xIuseoHl6enciIxlbgaAiFHBvY390bpbmpM_sDgwmdwaEJ5S1JRb0nypuDT_7FY5Z2k41tyPZCHg2pl8AvDEZdQWNVDpRgl6X5hQkaQuZnAFJRuDM4FBJWDH2UMk_zmgStDSmNqRYcCTlDwADHq1mXrPLq4b3rA4RHix59zaLdtmBMzIbdufVJ_w3y2lbumCf6REmOedvRfhOB1mGpxLH4DOo25c816d7z05siXeVxFgYIJnUkhq4xJM4HDeuSwFKE2pyP0_USeG96cV-NfIYUX4GSJ9LMCEBbVC5lGw4WLEGLVARGVTLB0316vhu05i0KweXVZrFWUA"
headers = {'Authorization': headers}



# ------------------------------ FACTURI MARTIE ------------------------------------------------------------------


# # listaIndexIncarcare = [4290100142, 4290100166, 4302796013, 4302796041, 4302796073, 4290100276, 4302796147, 4290100348, 4290100390, 4290100430, 4302796295, 4302796335, 4290100542, 4290100552, 4290100568, 4290100578, 4290100596, 4290100612, 4290100630, 4302796473, 4302796493, 4302796511, 4302796529, 4302796545, 4290100728, 4302796575, 4302796593, 4290100776, 4290100790, 4290100802, 4302796653, 4302796671, 4302796685, 4302796709, 4302796741, 4302796757, 4290100920, 4290100938, 4302796797, 4290100948, 4290100958, 4290100974, 4302796835, 4302796853, 4302796871, 4290101038, 4302796895, 4302796915, 4290101076, 4290101094, 4302796965, 4302796969, 4302796989, 4302797003, 4302797029, 4290101198, 4290101240, 4302797101, 4302797119, 4290101294, 4302797141, 4302797153, 4302797171, 4302797187, 4290101364, 4302797211, 4302797227, 4290101418, 4302797259, 4302797279, 4302797299, 4302797317, 4290101494, 4302797349, 4302797373, 4290101552, 4302797395, 4302797413, 4290101618, 4290101636, 4302797449, 4302797469, 4302797487, 4290101720, 4302797519, 4302797551, 4302797565, 4290101820, 4302797601, 4302797611, 4302797627, 4302797647, 4302797683, 4290101946, 4302797711, 4302797723, 4302797753, 4290102048, 4302797781, 4290102082, 4290102098, 4302797835, 4290102148, 4302797879, 4302797901, 4290102242, 4290102272, 4290102294, 4290102310, 4302797995, 4302798017, 4302798035, 4290102426, 4302798059, 4302798083, 4290102486, 4302798109, 4290102566, 4290102578, 4290102600, 4302798209, 4290102680, 4302798235, 4290102708, 4302798285, 4290102768, 4290102790, 4290102820, 4290102850, 4302798379, 4290102906, 4290102934, 4302798441, 4290102984, 4290103002, 4290103032, 4290103060, 4290103090, 4302798551, 4290103120, 4302798581, 4302798601, 4302798627, 4290103210, 4290103230, 4302798673, 4302798685, 4290103302, 4302798707, 4302798733, 4302798745, 4302798757, 4290103394, 4290103414, 4290103434, 4290103446, 4290103458, 4302798851, 4302798885, 4290103504, 4290103526, 4290103544, 4290103564, 4290103582, 4290103608, 4302799013, 4290103650, 4290103668, 4302799073, 4290103738, 4302799133, 4302799169, 4290103844, 4290103882, 4302799255, 4290103938, 4302799311, 4290103980, 4290103996, 4290104012, 4290104038, 4290104062, 4302799417, 4290104080, 4302799443, 4302799465, 4290104120, 4290104148, 4290104164, 4290104170, 4290104180, 4290104202, 4290104212, 4302799575, 4302799595, 4290104268, 4302799635, 4290104294, 4290104316, 430279970]
# # listaIndexIncarcare1 = [4290100142, 4290100166, 4302796013, 4302796041, 4302796073, 4290100276, 4302796147, 4290100348, 4290100390, 4290100430, 4302796295, 4302796335, 4290100542, 4290100552, 4290100568, 4290100578, 4290100596, 4290100612, 4290100630, 4302796473, 4302796493, 4302796511, 4302796529, 4302796545, 4290100728, 4302796575, 4302796593, 4290100776, 4290100790, 4290100802, 4302796653, 4302796671, 4302796685, 4302796709, 4302796741, 4302796757, 4290100920, 4290100938, 4302796797, 4290100948, 4290100958, 4290100974, 4302796835, 4302796853, 4302796871, 4290101038, 4302796895, 4302796915, 4290101076, 4290101094, 4302796965, 4302796969, 4302796989, 4302797003, 4302797029, 4290101198, 4290101240, 4302797101, 4302797119, 4290101294, 4302797141, 4302797153, 4302797171, 4302797187, 4290101364, 4302797211, 4302797227, 4290101418, 4302797259, 4302797279, 4302797299, 4302797317]
# # listaIndexIncarcare2 = [4290101494, 4302797349, 4302797373, 4290101552, 4302797395, 4302797413, 4290101618, 4290101636, 4302797449, 4302797469, 4302797487, 4290101720, 4302797519, 4302797551, 4302797565, 4290101820, 4302797601, 4302797611, 4302797627, 4302797647, 4302797683, 4290101946, 4302797711, 4302797723, 4302797753, 4290102048, 4302797781, 4290102098, 4302797835, 4290102148, 4302797879, 4302797901, 4290102242, 4290102272, 4290102294, 4290102310, 4302797995, 4302798017, 4302798035, 4290102426, 4302798059, 4302798083, 4290102486, 4302798109, 4290102566, 4290102578, 4290102600, 4302798209, 4290102680, 4302798235, 4290102708, 4302798285, 4290102768, 4290102790, 4290102820, 4290102850, 4302798379, 4290102906, 4290102934, 4302798441, 4290102984, 4290103002, 4290103032, 4290103060, 4290103090, 4302798551, 4290103120, 4302798581, 4302798601, 4302798627, 4290103210, 4290103230, 4302798673, 4302798685, 4290103302, 4302798707, 4302798733, 4302798745, 4302798757, 4290103394, 4290103414, 4290103434, 4290103446, 4290103458]
# # listaIndexIncarcare3 = [4302798851, 4302798885, 4290103504, 4290103526, 4290103544, 4290103564, 4290103582, 4290103608, 4302799013, 4290103650, 4290103668, 4302799073, 4290103738, 4302799133, 4302799169, 4290103844, 4290103882, 4302799255, 4290103938, 4302799311, 4290103980, 4290103996, 4290104012, 4290104038, 4290104062, 4302799417, 4290104080, 4302799443, 4302799465, 4290104120, 4290104148, 4290104164, 4290104170, 4290104180, 4290104202, 4290104212, 4302799575, 4302799595, 4290104268, 4302799635, 4290104294, 4290104316]

# # print("asta e index incarcare 1 ",len(listaIndexIncarcare1))
# # print("asta e index incarcare 2 ",len(listaIndexIncarcare2))
# # print("asta e index incarcare 3 ",len(listaIndexIncarcare3))
# # lista = [3469082710, 3493202665, 3493207715, 3469082998, 3493202787, 3493206439, 3469083298, 3469083398, 3493205375, 3493202993, 3493203033, 3469083766, 3493203123, 3493208523, 3493204475, 3469089046, 3493203295, 3493203327, 3493203383, 3493208587, 3493203503, 3469084750, 3493203531, 3493204497, 3493203621, 3469085034, 3493209921, 3469085260, 3493211149, 3469085386, 3493203895, 3493204215, 3469085588, 3469085624, 3469085710, 3469085724, 3493204129, 3493204181, 3493204245, 3469085968, 3493204313, 3493208661, 3469086094, 3493204445, 3469086268, 3469086312, 3469086356, 3493204647, 3469086496, 3493210013, 3469086576, 3493204767, 3469086714, 3469086678, 3469086750, 3469086790, 3493204949, 3469086942, 3469087010, 3493205069, 3469087154, 3469087236, 3469087270, 3469087320, 3469087404, 3493211213, 3469087520, 3493205413, 3493205477, 3493205551, 3469087810, 3469087858, 3493205713, 3493205775, 3469088050, 3493205871, 3493205927, 3493205971, 3493206523, 3469088354, 3469088414, 3469088464, 3469088520, 3469088564]
# # print("asta e lista simpla",len(lista))

# # listaIdDescarcare1 = [3469078892, 3469078904, 3493200191, 3493200877, 3493200301, 3469079090, 3493201011, 3469090610, 3469079800, 3469087460, 3493200527, 3493200563, 3469079516, 3469079548, 3469079576, 3469079636, 3469079656, 3469079704, 3469079724, 3493200815, 3493211099, 3493200865, 3493209831, 3493200919, 3469079980, 3493200991, 3493201031, 3469080132, 3469080184, 3469080236, 3493211123, 3493201715, 3493201253, 3493201289, 3493201375, 3493201411, 3469080634, 3469080674, 3493201491, 3469080740, 3469080782, 3469087488, 3493201613, 3493205835, 3493201671, 3469081002, 3493201727, 3493201775, 3469081154, 3469081202, 3493203103, 3493201895, 3493207619, 3493201973, 3493201989, 3469081522, 3469081610, 3493211139, 3493208509, 3469088992, 3493206425, 3493202219, 3493202267, 3493202315, 3469082060, 3493202359, 3493202387, 3469082238, 3493202449, 3493202503, 3493202511, 3493202561] 
# # listaIdDescarcare2 = [3469082710, 3493202665, 3493207715, 3469082998, 3493202787, 3493206439, 3469083298, 3469083398, 3493205375, 3493202993, 3493203033, 3469083766, 3493203123, 3493208523, 3493204475, 3469089046, 3493203295, 3493203327, 3493203383, 3493208587, 3493203503, 3469084750, 3493203531, 3493204497, 3493203621, 3469085034, 3493209921, 3469085260, 3493211149, 3469085386, 3493203895, 3493204215, 3469085588, 3469085624, 3469085710, 3469085724, 3493204129, 3493204181, 3493204245, 3469085968, 3493204313, 3493208661, 3469086094, 3493204445, 3469086268, 3469086312, 3469086356, 3493204647, 3469086496, 3493210013, 3469086576, 3493204767, 3469086714, 3469086678, 3469086750, 3469086790, 3493204949, 3469086942, 3469087010, 3493205069, 3469087154, 3469087236, 3469087270, 3469087320, 3469087404, 3493211213, 3469087520, 3493205413, 3493205477, 3493205551, 3469087810, 3469087858, 3493205713, 3493205775, 3469088050, 3493205871, 3493205927, 3493205971, 3493206523, 3469088354, 3469088414, 3469088464, 3469088520, 3469088564]
# # listaIdDescarcare3 =[3493206257, 3493206337, 3469088794, 3469088870, 3469088922, 3469088998, 3469089038, 3469089178, 3493206751, 3469089294, 3469089382, 3493206989, 3469089494, 3493206957, 3493207037, 3469089700, 3469089772, 3493207199, 3469090058, 3493209593, 3469090146, 3469090190, 3469090254, 3469090324, 3469090394, 3493207547, 3469090514, 3493207643, 3493207681, 3469090772, 3469090804, 3469090820, 3469090824, 3469091184, 3469097068, 3469094008, 3493207995, 3493208057, 3469090920, 3493209697, 3469091170, 3469094894]
# # deverificat = "nu a mers 4290102082, nu a mers 4302799709"

# # print(len(listaIdDescarcare1))
# # print(len(listaIdDescarcare2))
# # print(len(listaIdDescarcare3))



# # -------------------------------------------------------------------------------------------------------------------------------------------------


# # ----------------------------------------------------- APRILIE ----------------------------------------
# deverificat = [4290844208, 4290424508,4290424570, 4290425038, 4290586072, 4290759944, 4290760050, 4290760424, 4290760458, 4290760704, 4290760470, 4303490999, 4303490971, 4303490957, 4303490907, 4290760578, 4290760568, 4290760552, 4303490849]
# deverificat1 = [4290759944, 4290760050, 4290760424, 4290760458, 4290760704, 4290760470, 4303490999, 4303490971, 4303490957, 4303490907, 4290760578, 4290760568, 4290760552, 4303490849]
# # listaIndexIncarcare1 = [4303135147, 4290424412, 4290424428, 4290424460, 4290424476, 4303135239,  4290424518, 4303135321, 4303135367, 4290424608, 4303135389, 4290424656, 4290424660, 4290424682, 4303135477, 4290424712, 4303135533, 4303135553, 4290424806, 4303135601, 4303135621, 4303135645, 4290424878, 4303135687, 4290424922, 4290424930, 4290424948, 4290424970, 4303135783, 4303135803, 4303135827, 4290425024, 4303135887, 4303135905, 4303135927, 4290425132, 4290425146, 4290425158, 4303136003, 4290425192, 4290425212, 4290425234, 4303136085, 4290425274, 4290425282, 4303136159, 4290425326]
# # listaIndexIncarcare2 = [4290585800, 4303305317, 4303305341, 4290585856, 4303305383, 4303305393, 4303305409, 4303305443, 4303305471, 4303305483, 4290585982, 4290585998, 4303305527, 4303305553, 4290586050, 4290586090, 4290586108, 4303305659, 4303305683, 4290586154, 4290586176, 4290586192, 4303305783, 4303305811, 4290586262, 4303305847, 4290586308, 4303305911, 4303305939, 4290586388, 4303306085, 4290586494, 4303306137, 4303306173, 4303306197, 4303306227, 4303306261, 4290586684, 4290586708, 4303306329, 4303306359, 4303306389, 4290586794, 4303306409, 4290586828, 4303306461, 4290586854, 4290586884, 4303306497, 4290586910]
# # listaIndexIncarcare3 = [4290759752, 4290759760, 4303490077, 4290759794, 4290759804, 4290759842, 4303490169, 4303490193, 4303490221, 4303490279, 4303490305, 4290760028, 4303490375, 4303490415, 4303490451, 4303490485, 4303490523, 4290760260, 4303490583, 4290760288, 4303490617, 4303490647, 4303490679, 4303490701, 4303490723, 4303490755, 4290760486, 4303490827, 4303491029, 4290760742, 4303491055, 4303491065, 4303491083, 4303491171, 4303491185, 4303491217, 4290760918]
# # listaIndexIncarcare4 = [4303580359, 4303580381, 4303580403, 4303580427, 4303580439, 4290844366, 4290844380, 4303580495, 4290844418, 4303580525, 4303580573, 4303580597, 4303580637, 4290844566, 4303580693, 4303580727, 4303580749, 4303580781, 4290844706, 4303580849, 4303580893, 4290844808, 4290844830, 4290844854, 4290844872, 4290844892, 4290844900, 4290844914, 4290844932, 4290844948, 4303581091, 4303581109, 4303581115, 4290845002, 4290845010, 4303581159, 4303581179, 4303581203, 4290845046, 4290845058, 4290845110, 4303581271, 4290845138, 4290845152, 4303581317, 4290845184, 4290845194, 4303581373]
# # print(len(listaIndexIncarcare4))

# # listaIdDescarcare1 = [3493865671, 3469671550, 3469674426, 3469668144, 3469671062, 3493864443, 3469674440, 3493854253, 3493875221, 3469668638, 3493871903, 3469671098, 3469668798, 3469673966, 3493854523, 3469672764, 3493866485, 3493855453, 3469671120, 3493864447, 3493861431, 3493854789, 3469671678, 3493854833, 3469751136, 3469669504, 3469669556, 3469672530, 3493854961, 3493854991, 3493855043, 3469672812, 3493855147, 3493865695, 3493858633, 3469670338, 3469673270, 3469669692, 3493855567, 3469669878, 3469670242, 3469674034, 3493866509, 3469671692, 3469674046, 3493855579, 3469671268]
# # listaIdDescarcare2 = [3469931900, 3494196751, 3494196789, 3469972254, 3494201401, 3494204059, 3494196929, 3494197033, 3494197017, 3494197051, 3469972278, 3469958432, 3494197157, 3494209459, 3469964054, 3469958454, 3469958450, 3494197337, 3494197377, 3469963574, 3469973966, 3469934386, 3494197493, 3494198899, 3469959724, 3494198903, 3469964984, 3494199151, 3494197687, 3469932708, 3494197837, 3469960690, 3494199389, 3494197947, 3494197975, 3494198007, 3494198697, 3469962280, 3469933572, 3494198213, 3494198191, 3494204309, 3469934064, 3494205035, 3469960716, 3494198273, 3469948786, 3469948796, 3494198765, 3469948820]
# # listaIdDescarcare3 = [3470240132, 3470239612, 3494566959, 3470240202, 3470253074, 3470239430, 3494552583, 3494557111, 3494549999, 3494550083, 3494550159, 3470239560, 3494550249, 3494550317, 3494550363, 3494550411, 3494550459, 3470254032, 3494550581, 3470243228, 3494550659, 3494550721, 3494550775, 3494550823, 3494550859, 3494550935, 3470239500, 3494555167, 3494571477, 3470328694, 3494551681, 3494551709, 3494551759, 3494552005, 3494552041, 3494552085, 3470239922]
# # listaIdDescarcare4 = [3494730829, 3494730937, 3494730993, 3494731093, 3494731145, 3470407790, 3470407884, 3494731365, 3470408092, 3494731443, 3494731519, 3494731559, 3494731631, 3470408618, 3494732581, 3494732561, 3494731845, 3494731905, 3470409086, 3494732405, 3494732171, 3470409328, 3470409354, 3470409392, 3470409438, 3470409474, 3470409512, 3470409548, 3470409582, 3470409636, 3494732533, 3494732605, 3494743423, 3470409776, 3470409860, 3494732665, 3494741929, 3494739039, 3470410206, 3470410348, 3470410550, 3494732801, 3470410756, 3470410830, 3494732861, 3470411032, 3470411134, 3494740325]
# listaRusinii = [3494551391, 3470320930, 3470320974, 3470320268, 3470388278, 3470387300, 3470329458, 3494551637, 3494551473, 3494560607, 3494551323, 3470239906, 3470239544, 3470268444, 3494556343]
# print(len(listaRusinii))

# listaProaste = []
# for i in deverificat:
#     if i not in deverificat1:
#         listaProaste.append(i)
# print("proastele dreacu care sunteti ",listaProaste)

# listaProastelor = [4290844208, 4290424508, 4290424570, 4290425038, 4290586072]

# ----------------------------------------------------------------------------------------------------------------------


# ----------------------------------------------------------- MAI ---------------------------------------------------
deverificat = [4291075050]
listaIndexIncarcare = [4291073698, 4303821283, 4303821307, 4303821323, 4291073908, 4291073940, 4291073968, 4291073996, 4303821413, 4291074048, 4291074068, 4291074088, 4303821483, 4303821515, 4291074182, 4303821583, 4303821609, 4291074344, 4291074374, 4303821739, 4291074430, 4303821803, 4303821827, 4303821859, 4291074534, 4291074554, 4303821929, 4291074608, 4291074630, 4291074648, 4303822017, 4291074692, 4303822055, 4303822073, 4303822085, 4291074754, 4291074764, 4303822141, 4291074852, 4303822219, 4303822255, 4291074930, 4303822295, 4291074976, 4291074990, 4303822347, 4303822363, 4291075056, 4291075068]
# listaMea = listaIndexIncarcare1 + listaIndexIncarcare2 + listaIndexIncarcare3

# print(len(listaMea))
listaIdDescarcare = []
# print(len(listaIndexIncarcare))
def stareMesaj():
        listaIdDescarcare.clear()
        try:
            for i in range(0, len(listaIndexIncarcare)):
                apiStareMesaj = 'https://api.anaf.ro/prod/FCTEL/rest/stareMesaj?id_incarcare='+str(listaIndexIncarcare[i])
                
                while True:  # buclă infinită
                    stare = requests.get(apiStareMesaj, headers=headers, timeout=30)
                    if stare.status_code == 200:
                        resp = stare.text
                        root = ET.fromstring(resp)
                        staree = str(root.attrib['stare'])
                        if staree != 'in prelucrare':  # dacă starea nu mai este 'in prelucrare', se iese din buclă
                            break
                        time.sleep(5)  # așteaptă 5 secunde înainte de a interoga din nou API-ul
                    else:
                        print('Eroare la interogarea API-ului')
                        break  # dacă există o eroare la interogarea API-ului, se iese din buclă

                try:
                    id_descarcare = int(root.attrib['id_descarcare']) 
                    listaIdDescarcare.append(id_descarcare)
                    print('id descarcare',id_descarcare, listaIndexIncarcare[i])   
                except:
                    print(resp) 
        except:
            print(f'nu a mers {listaIndexIncarcare[i]}')
print("aici am facut starea mesajului")                 
# stareMesaj()
print(listaIdDescarcare)

# listaIdDescarcare1 = listaIdDescarcare1 + listaIdDescarcare2 + listaIdDescarcare3
# print(len(listaIdDescarcare))
listaIdDescarcare = [3470933628, 3495183345, 3495183337, 3495183367, 3470931430, 3470931186, 3470933558, 3470930838, 3495183467, 3470930876, 3470933220, 3470931592, 3495183545, 3495183569, 3470933576, 3495185031, 3495183681, 3470931146, 3470931240, 3495185253, 3470933230, 3495184971, 3495185407, 3495185655, 3470931478, 3470933294, 3495184181, 3470933660, 3470931654, 3470931698, 3495184339, 3470931782, 3495184395, 3495184771, 3495184461, 3470933586, 3470931936, 3495185605, 3470932042, 3495186879, 3495184799, 3470932964, 3495186205, 3470932972, 3470933406, 3495185525, 3495186885, 3470932196, 3470932728]
print(len(listaIdDescarcare))

def descarcare():
        for i in range(0, len(listaIdDescarcare)):
            apiDescarcare = 'https://api.anaf.ro/prod/FCTEL/rest/descarcare?id='+str(listaIdDescarcare[i])

            descarcare = requests.get(apiDescarcare, headers=headers, timeout=30)

            if descarcare.status_code == 200:
                # print("Cererea a fost efectuata cu succes!")
                with open('C:/Dezvoltare/E-Factura/2023/eFactura/Konica/eFacturaKonicaMinolta local/output zip api/fisier'+str(listaIdDescarcare[i])+'.zip', 'wb') as file:
                # with open("/home/efactura/efactura_konica/outputZipAPI/fisier"+str(listaIdDescarcare[i])+'.zip', 'wb') as file:
                    file.write(descarcare.content)
                    print('Descarcat cu success')
                
            # print(descarcare.text)
            else:
                print("Eroare la efectuarea cererii HTTP:", descarcare.status_code)
                print(descarcare.text)
print("aici descarcam folosind id_descarcare")
descarcare()

directory_path = 'C:/Dezvoltare/E-Factura/2023/eFactura/Konica/eFacturaKonicaMinolta local/output zip api'
# directory_path = "/home/efactura/efactura_konica/outputZipAPI"

output_directory = 'C:/Dezvoltare/E-Factura/2023/eFactura/Konica/eFacturaKonicaMinolta local/output conversie'
# output_directory = "/home/efactura/efactura_konica/outputConversie"
# arhiveANAF = "/home/efactura/efactura_konica/arhiveANAF"

os.makedirs(output_directory, exist_ok=True)

for filename in os.listdir(directory_path):
    # break
    if filename.endswith('.zip'):
        zip_file_path = os.path.join(directory_path, filename)
        with zipfile.ZipFile(zip_file_path, 'r') as zip_file:
            xml_files = [name for name in zip_file.namelist() if name.endswith('.xml') and "semnatura" not in name.lower()]
            for xml_file in xml_files:
                with zip_file.open(xml_file) as file:
                    xml_data = file.read()
                    output_path = os.path.join(output_directory, xml_file)
                    with open(output_path, 'wb') as output_file:
                        output_file.write(xml_data)
                        
                        
def make_archive(source, destination):
    base = os.path.basename(destination)
    name = base.split('.')[0]
    format = base.split('.')[1]
    archive_from = os.path.dirname(source)
    archive_to = os.path.basename(source.strip(os.sep))
    shutil.make_archive(name, format, archive_from, archive_to)
    shutil.move('%s.%s'%(name,format), destination)  